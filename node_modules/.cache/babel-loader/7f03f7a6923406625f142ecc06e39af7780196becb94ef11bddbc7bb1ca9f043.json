{"ast":null,"code":"var _jsxFileName = \"/Users/jihun/workspace/KOPIS/src/Components/MdList/MDList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst musicals = [{\n  id: 1,\n  name: '준장(진) 이강희의 재림',\n  stage: '체계단',\n  period: '2024-01-01 - 2024-10-31',\n  producer: '군복무',\n  lead: '이강희',\n  image: 'https://via.placeholder.com/300'\n}, {\n  id: 2,\n  name: '만기전역한 내가 이병?',\n  stage: '체계단',\n  period: '2024-08-01 - 2026-05-31',\n  producer: '군복무',\n  lead: '이병',\n  image: 'https://via.placeholder.com/300'\n}\n// 더 많은 뮤지컬 데이터 추가 가능\n];\nconst MDList = () => {\n  _s();\n  const location = useLocation();\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const search = params.get('search');\n    if (search) {\n      setSearchTerm(search);\n    }\n  }, [location]);\n  const filteredMusicals = musicals.filter(musical => musical.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shop Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      placeholder: \"Search musicals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMusicals.map(musical => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: musical.name\n      }, musical.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MDList, \"P8CNNEGyaaIij3Q1qHf8Bq2PYUc=\", false, function () {\n  return [useLocation];\n});\n_c = MDList;\nexport default MDList;\nvar _c;\n$RefreshReg$(_c, \"MDList\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","musicals","id","name","stage","period","producer","lead","image","MDList","_s","location","searchTerm","setSearchTerm","params","URLSearchParams","search","get","filteredMusicals","filter","musical","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","_c","$RefreshReg$"],"sources":["/Users/jihun/workspace/KOPIS/src/Components/MdList/MDList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst musicals = [\n  {\n    id: 1,\n    name: '준장(진) 이강희의 재림',\n    stage: '체계단',\n    period: '2024-01-01 - 2024-10-31',\n    producer: '군복무',\n    lead: '이강희',\n    image: 'https://via.placeholder.com/300'\n  },\n  {\n    id: 2,\n    name: '만기전역한 내가 이병?',\n    stage: '체계단',\n    period: '2024-08-01 - 2026-05-31',\n    producer: '군복무',\n    lead: '이병',\n    image: 'https://via.placeholder.com/300'\n  },\n  // 더 많은 뮤지컬 데이터 추가 가능\n];\n\nconst MDList = () => {\n  const location = useLocation();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const search = params.get('search');\n    if (search) {\n      setSearchTerm(search);\n    }\n  }, [location]);\n\n  const filteredMusicals = musicals.filter((musical) =>\n    musical.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h1>Shop Page</h1>\n      <input \n        type=\"text\" \n        value={searchTerm} \n        onChange={(e) => setSearchTerm(e.target.value)} \n        placeholder=\"Search musicals...\" \n      />\n      <ul>\n        {filteredMusicals.map((musical) => (\n          <li key={musical.id}>\n            {musical.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MDList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAG,CACf;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE,yBAAyB;EACjCC,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAE,KAAK;EACXC,KAAK,EAAE;AACT,CAAC,EACD;EACEN,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE,yBAAyB;EACjCC,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT;AACA;AAAA,CACD;AAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMiB,MAAM,GAAG,IAAIC,eAAe,CAACJ,QAAQ,CAACK,MAAM,CAAC;IACnD,MAAMA,MAAM,GAAGF,MAAM,CAACG,GAAG,CAAC,QAAQ,CAAC;IACnC,IAAID,MAAM,EAAE;MACVH,aAAa,CAACG,MAAM,CAAC;IACvB;EACF,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,MAAMO,gBAAgB,GAAGjB,QAAQ,CAACkB,MAAM,CAAEC,OAAO,IAC/CA,OAAO,CAACjB,IAAI,CAACkB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,UAAU,CAACS,WAAW,CAAC,CAAC,CAC9D,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB3B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,UAAW;MAClBkB,QAAQ,EAAGC,CAAC,IAAKlB,aAAa,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAoB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACF3B,OAAA;MAAAuB,QAAA,EACGL,gBAAgB,CAACgB,GAAG,CAAEd,OAAO,iBAC5BpB,OAAA;QAAAuB,QAAA,EACGH,OAAO,CAACjB;MAAI,GADNiB,OAAO,CAAClB,EAAE;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAlCID,MAAM;EAAA,QACOX,WAAW;AAAA;AAAAqC,EAAA,GADxB1B,MAAM;AAoCZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}